class l{constructor(){this.downloadButtons=document.querySelectorAll("[data-download]"),this.fileInfoContainer=document.getElementById("file-info-container"),this.init()}init(){this.bindEvents(),this.checkFileAvailability()}bindEvents(){this.downloadButtons.forEach(t=>{t.addEventListener("click",e=>this.handleDownload(e))})}async handleDownload(t){t.preventDefault();const e=t.currentTarget,i=e.getAttribute("data-download"),n=e.getAttribute("href");if(!n){this.showError("Download link not found");return}this.setLoadingState(e,!0);try{const a=(await this.getFileInfo())[i];if(!a||!a.exists){this.showError(`${i.toUpperCase()} is not available for download`),this.setLoadingState(e,!1);return}await this.performDownload(n,i)}catch(o){console.error("Download error:",o),this.showError("Failed to download file. Please try again.")}finally{this.setLoadingState(e,!1)}}async performDownload(t,e){return new Promise((i,n)=>{const o=document.createElement("a");o.href=t,o.download="",o.style.display="none",document.body.appendChild(o),o.addEventListener("click",()=>{this.trackDownload(e)}),o.addEventListener("error",a=>{document.body.removeChild(o),n(a)}),o.click(),setTimeout(()=>{document.body.contains(o)&&document.body.removeChild(o),i()},1e3)})}async getFileInfo(){try{const t=await fetch("/download/info");if(!t.ok)throw new Error(`HTTP ${t.status}`);return await t.json()}catch(t){return console.error("Failed to get file info:",t),{}}}async checkFileAvailability(){if(this.fileInfoContainer)try{const t=await this.getFileInfo();this.updateFileInfoDisplay(t)}catch(t){console.error("Failed to check file availability:",t)}}updateFileInfoDisplay(t){if(!this.fileInfoContainer)return;let e='<div class="file-info">';e+='<h6 class="mb-2">File Availability</h6>',Object.entries(t).forEach(([i,n])=>{const o=n.exists?"available":"unavailable",a=n.exists?"Available":"Not Available";e+=`
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span class="text-capitalize">${i}:</span>
                    <span class="file-status ${o}">${a}</span>
                </div>
            `,n.exists&&n.size&&(e+=`
                    <div class="d-flex justify-content-between align-items-center mb-1">
                        <small class="text-muted">Size:</small>
                        <small class="text-muted">${n.size}</small>
                    </div>
                `)}),e+="</div>",this.fileInfoContainer.innerHTML=e}setLoadingState(t,e){e?(t.classList.add("loading"),t.disabled=!0):(t.classList.remove("loading"),t.disabled=!1)}trackDownload(t){typeof gtag<"u"&&gtag("event","download",{event_category:"file_download",event_label:t,value:1}),console.log(`Download started: ${t}`)}showError(t){const e=document.createElement("div");e.className="alert alert-danger alert-dismissible fade show position-fixed",e.style.cssText="top: 20px; right: 20px; z-index: 9999; min-width: 300px;",e.innerHTML=`
            <strong>Download Error:</strong> ${t}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `,document.body.appendChild(e),setTimeout(()=>{document.body.contains(e)&&document.body.removeChild(e)},5e3)}showSuccess(t){const e=document.createElement("div");e.className="alert alert-success alert-dismissible fade show position-fixed",e.style.cssText="top: 20px; right: 20px; z-index: 9999; min-width: 300px;",e.innerHTML=`
            <strong>Success:</strong> ${t}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `,document.body.appendChild(e),setTimeout(()=>{document.body.contains(e)&&document.body.removeChild(e)},3e3)}}document.addEventListener("DOMContentLoaded",function(){try{new l}catch(s){console.error("Failed to initialize download manager:",s)}});
